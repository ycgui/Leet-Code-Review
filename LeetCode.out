\BOOKMARK [0][-]{chapter.1}{Math and Probability}{}% 1
\BOOKMARK [1][-]{section.1.1}{Nim Game \(E\)}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Bulb Switcher \(M\)}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{Find the Celebrity \(M\)}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{Water and Jug Problem \(M\)}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.5}{Factorial Trailing Zeroes \(E\)}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.6}{Number of Digit One \(H\)}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.7}{Palindrome Number \(E\)}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.8}{Reverse Integer \(E\)}{chapter.1}% 9
\BOOKMARK [1][-]{section.1.9}{Integer Break \(M\)}{chapter.1}% 10
\BOOKMARK [1][-]{section.1.10}{Integer Replacement \(E\)}{chapter.1}% 11
\BOOKMARK [1][-]{section.1.11}{Count Numbers with Unique Digits \(M\)}{chapter.1}% 12
\BOOKMARK [1][-]{section.1.12}{Lexicographical Numbers \(M\)}{chapter.1}% 13
\BOOKMARK [1][-]{section.1.13}{Fraction to Recurring Decimal \(M\)}{chapter.1}% 14
\BOOKMARK [1][-]{section.1.14}{Elimination Game \(M\)}{chapter.1}% 15
\BOOKMARK [1][-]{section.1.15}{Rotate Function \(E\)}{chapter.1}% 16
\BOOKMARK [1][-]{section.1.16}{Plus One \(E\)}{chapter.1}% 17
\BOOKMARK [1][-]{section.1.17}{Add Digits \(E\)}{chapter.1}% 18
\BOOKMARK [1][-]{section.1.18}{Happy Number \(E\)}{chapter.1}% 19
\BOOKMARK [1][-]{section.1.19}{Ugly Number \(E\)}{chapter.1}% 20
\BOOKMARK [1][-]{section.1.20}{Ugly Number II \(M\)}{chapter.1}% 21
\BOOKMARK [1][-]{section.1.21}{Super Ugly Number \(M\)}{chapter.1}% 22
\BOOKMARK [1][-]{section.1.22}{Count Primes \(E\)}{chapter.1}% 23
\BOOKMARK [1][-]{section.1.23}{Pow\(x, n\) \(M\)}{chapter.1}% 24
\BOOKMARK [1][-]{section.1.24}{Super Pow \(M\)}{chapter.1}% 25
\BOOKMARK [1][-]{section.1.25}{Sqrt\(x\) \(M\)}{chapter.1}% 26
\BOOKMARK [1][-]{section.1.26}{Valid Perfect Square \(M\)}{chapter.1}% 27
\BOOKMARK [1][-]{section.1.27}{Rectangle Area \(E\)}{chapter.1}% 28
\BOOKMARK [1][-]{section.1.28}{Rectangle Overlap \(M\)}{chapter.1}% 29
\BOOKMARK [1][-]{section.1.29}{Container With Most Water \(M\)}{chapter.1}% 30
\BOOKMARK [1][-]{section.1.30}{Trapping Rain Water \(H\)}{chapter.1}% 31
\BOOKMARK [1][-]{section.1.31}{Largest Rectangle in Histogram \(H\)}{chapter.1}% 32
\BOOKMARK [1][-]{section.1.32}{Line Reflection \(M\)}{chapter.1}% 33
\BOOKMARK [1][-]{section.1.33}{Max Points on a Line \(H\)}{chapter.1}% 34
\BOOKMARK [1][-]{section.1.34}{Perfect Rectangle \(H\)}{chapter.1}% 35
\BOOKMARK [1][-]{section.1.35}{Random Pick Index \(M\)}{chapter.1}% 36
\BOOKMARK [1][-]{section.1.36}{Shuffle an Array \(M\)}{chapter.1}% 37
\BOOKMARK [1][-]{section.1.37}{Reservoir Sampling \(FB high frequency\)}{chapter.1}% 38
\BOOKMARK [0][-]{chapter.2}{Bit Manipulation}{}% 39
\BOOKMARK [1][-]{section.2.1}{Sum of Two Integers \(E\)}{chapter.2}% 40
\BOOKMARK [1][-]{section.2.2}{Divide Two Integers \(M\)}{chapter.2}% 41
\BOOKMARK [1][-]{section.2.3}{Bitwise AND of Numbers Range \(M\)}{chapter.2}% 42
\BOOKMARK [1][-]{section.2.4}{Grey Code \(M\)}{chapter.2}% 43
\BOOKMARK [1][-]{section.2.5}{Repeated DNA Sequences \(M\)}{chapter.2}% 44
\BOOKMARK [1][-]{section.2.6}{Power of Two \(E\)}{chapter.2}% 45
\BOOKMARK [1][-]{section.2.7}{Power of Three \(E\)}{chapter.2}% 46
\BOOKMARK [1][-]{section.2.8}{Power of Four \(E\)}{chapter.2}% 47
\BOOKMARK [1][-]{section.2.9}{Number of 1 Bits \(E\)}{chapter.2}% 48
\BOOKMARK [1][-]{section.2.10}{Counting Bits \(M\)}{chapter.2}% 49
\BOOKMARK [1][-]{section.2.11}{Reverse Bits \(E\)}{chapter.2}% 50
\BOOKMARK [1][-]{section.2.12}{Single Number \(E\)}{chapter.2}% 51
\BOOKMARK [1][-]{section.2.13}{Single Number II \(M\)}{chapter.2}% 52
\BOOKMARK [1][-]{section.2.14}{Single Number III \(M\)}{chapter.2}% 53
\BOOKMARK [1][-]{section.2.15}{UTF-8 Validation \(M\)}{chapter.2}% 54
\BOOKMARK [1][-]{section.2.16}{Binary Clock \(Google phone screen 2016.8.15\)}{chapter.2}% 55
\BOOKMARK [1][-]{section.2.17}{Hamming Distance \(E\)}{chapter.2}% 56
\BOOKMARK [1][-]{section.2.18}{Total Hamming Distance \(M\)}{chapter.2}% 57
\BOOKMARK [0][-]{chapter.3}{Linked List}{}% 58
\BOOKMARK [1][-]{section.3.1}{Intersection of Two Linked Lists \(E\)}{chapter.3}% 59
\BOOKMARK [1][-]{section.3.2}{Add Two Numbers \(M\)}{chapter.3}% 60
\BOOKMARK [1][-]{section.3.3}{Add Two Numbers II \(M\)}{chapter.3}% 61
\BOOKMARK [1][-]{section.3.4}{Plus One Linked List \(E\)}{chapter.3}% 62
\BOOKMARK [1][-]{section.3.5}{Palindrome Linked List \(E\)}{chapter.3}% 63
\BOOKMARK [1][-]{section.3.6}{Swap Nodes in Pairs \(E\)}{chapter.3}% 64
\BOOKMARK [1][-]{section.3.7}{Reverse Linked List \(E\)}{chapter.3}% 65
\BOOKMARK [1][-]{section.3.8}{Reverse Linked List II \(M\)}{chapter.3}% 66
\BOOKMARK [1][-]{section.3.9}{Rotate Linked List \(M\)}{chapter.3}% 67
\BOOKMARK [1][-]{section.3.10}{Reorder List \(M\)}{chapter.3}% 68
\BOOKMARK [1][-]{section.3.11}{Partition List \(M\)}{chapter.3}% 69
\BOOKMARK [1][-]{section.3.12}{Odd Even Linked List \(M\)}{chapter.3}% 70
\BOOKMARK [1][-]{section.3.13}{Linked List Random Node \(M\)}{chapter.3}% 71
\BOOKMARK [1][-]{section.3.14}{Delete Node in a Linked List \(E\)}{chapter.3}% 72
\BOOKMARK [1][-]{section.3.15}{Remove Linked List Elements \(E\)}{chapter.3}% 73
\BOOKMARK [1][-]{section.3.16}{Remove Nth Node From End of List \(E\)}{chapter.3}% 74
\BOOKMARK [1][-]{section.3.17}{Remove Duplicates from Sorted List \(E\)}{chapter.3}% 75
\BOOKMARK [1][-]{section.3.18}{Remove Duplicates from Sorted List II \(M\)}{chapter.3}% 76
\BOOKMARK [1][-]{section.3.19}{Linked List Cycle \(E\)}{chapter.3}% 77
\BOOKMARK [1][-]{section.3.20}{Linked List Cycle II \(M\)}{chapter.3}% 78
\BOOKMARK [1][-]{section.3.21}{Merge Two Sorted Lists \(E\)}{chapter.3}% 79
\BOOKMARK [1][-]{section.3.22}{Merge k Sorted Lists \(H\)}{chapter.3}% 80
\BOOKMARK [0][-]{chapter.4}{Stack and Queue}{}% 81
\BOOKMARK [1][-]{section.4.1}{Implement Stack using Queues \(E\)}{chapter.4}% 82
\BOOKMARK [1][-]{section.4.2}{Implement Queue using Stacks \(E\)}{chapter.4}% 83
\BOOKMARK [1][-]{section.4.3}{Min Stack \(E\)}{chapter.4}% 84
\BOOKMARK [1][-]{section.4.4}{Moving Average from Data Stream \(E\)}{chapter.4}% 85
\BOOKMARK [1][-]{section.4.5}{Evaluate Reverse Polish Notation \(M\)}{chapter.4}% 86
\BOOKMARK [1][-]{section.4.6}{Remove K Digits \(M\)}{chapter.4}% 87
\BOOKMARK [1][-]{section.4.7}{Kth Largest Element in an Array \(M\)}{chapter.4}% 88
\BOOKMARK [1][-]{section.4.8}{Top K Frequent Elements \(M\)}{chapter.4}% 89
\BOOKMARK [1][-]{section.4.9}{Kth Smallest Element in a Sorted Matrix \(M\)}{chapter.4}% 90
\BOOKMARK [1][-]{section.4.10}{K Closest Points to Origin \(Facebook Onsite 2019.6.28\)}{chapter.4}% 91
\BOOKMARK [0][-]{chapter.5}{Array}{}% 92
\BOOKMARK [1][-]{section.5.1}{Bulls and Cows \(E\)}{chapter.5}% 93
\BOOKMARK [1][-]{section.5.2}{Rotate Array \(E\)}{chapter.5}% 94
\BOOKMARK [1][-]{section.5.3}{Move Zeros \(E\)}{chapter.5}% 95
\BOOKMARK [1][-]{section.5.4}{Remove Element \(E\)}{chapter.5}% 96
\BOOKMARK [1][-]{section.5.5}{Remove Duplicates from Sorted Array \(E\)}{chapter.5}% 97
\BOOKMARK [1][-]{section.5.6}{Remove Duplicates from Sorted Array II \(M\)}{chapter.5}% 98
\BOOKMARK [1][-]{section.5.7}{Find K Pairs with Smallest Sums \(M\)}{chapter.5}% 99
\BOOKMARK [1][-]{section.5.8}{Shuffle an Array \(M\)}{chapter.5}% 100
\BOOKMARK [1][-]{section.5.9}{Missing Number \(M\)}{chapter.5}% 101
\BOOKMARK [1][-]{section.5.10}{First Missing Positive \(H\)}{chapter.5}% 102
\BOOKMARK [1][-]{section.5.11}{Summary Ranges \(M\)}{chapter.5}% 103
\BOOKMARK [1][-]{section.5.12}{Missing Ranges \(M\)}{chapter.5}% 104
\BOOKMARK [1][-]{section.5.13}{Intersection of Two Arrays \(E\)}{chapter.5}% 105
\BOOKMARK [1][-]{section.5.14}{Intersection of Two Arrays II \(E\)}{chapter.5}% 106
\BOOKMARK [1][-]{section.5.15}{Merge Sorted Array \(E\)}{chapter.5}% 107
\BOOKMARK [1][-]{section.5.16}{Sort Transformed Array \(M\)}{chapter.5}% 108
\BOOKMARK [1][-]{section.5.17}{H-Index \(M\)}{chapter.5}% 109
\BOOKMARK [1][-]{section.5.18}{H-Index II \(M\)}{chapter.5}% 110
\BOOKMARK [1][-]{section.5.19}{Majority Element \(E\)}{chapter.5}% 111
\BOOKMARK [1][-]{section.5.20}{Majority Element II \(M\)}{chapter.5}% 112
\BOOKMARK [1][-]{section.5.21}{Contains Duplicate \(E\)}{chapter.5}% 113
\BOOKMARK [1][-]{section.5.22}{Contains Duplicate II \(E\)}{chapter.5}% 114
\BOOKMARK [1][-]{section.5.23}{Contains Duplicate III \(M\)}{chapter.5}% 115
\BOOKMARK [1][-]{section.5.24}{Find the Duplicate Number \(M\)}{chapter.5}% 116
\BOOKMARK [1][-]{section.5.25}{Two Sum \(E\)}{chapter.5}% 117
\BOOKMARK [1][-]{section.5.26}{Two Sum II - Input array is sorted \(M\)}{chapter.5}% 118
\BOOKMARK [1][-]{section.5.27}{Two Sum III \(E\)}{chapter.5}% 119
\BOOKMARK [1][-]{section.5.28}{Two Sum IV - Input is a BST \(E\)}{chapter.5}% 120
\BOOKMARK [1][-]{section.5.29}{Two Sum \(Amazon phone screen 2016.10.04\)}{chapter.5}% 121
\BOOKMARK [1][-]{section.5.30}{3Sum \(M\)}{chapter.5}% 122
\BOOKMARK [1][-]{section.5.31}{3Sum Closest \(M\)}{chapter.5}% 123
\BOOKMARK [1][-]{section.5.32}{3Sum Smaller \(M\)}{chapter.5}% 124
\BOOKMARK [1][-]{section.5.33}{4Sum \(M\)}{chapter.5}% 125
\BOOKMARK [1][-]{section.5.34}{Range Addition \(M\)}{chapter.5}% 126
\BOOKMARK [1][-]{section.5.35}{Maximum Subarray \(M\)}{chapter.5}% 127
\BOOKMARK [1][-]{section.5.36}{Maximum Product Subarray \(M\)}{chapter.5}% 128
\BOOKMARK [1][-]{section.5.37}{Maximum Size Subarray Sum Equals k \(M\)}{chapter.5}% 129
\BOOKMARK [1][-]{section.5.38}{Minimum Size Subarray Sum \(M\)}{chapter.5}% 130
\BOOKMARK [1][-]{section.5.39}{Subarray Sum Equals K \(M\)}{chapter.5}% 131
\BOOKMARK [1][-]{section.5.40}{Continuous Subarray Sum \(M\)}{chapter.5}% 132
\BOOKMARK [1][-]{section.5.41}{Product of Array Except Self \(M\)}{chapter.5}% 133
\BOOKMARK [1][-]{section.5.42}{Task Scheduler \(M\)}{chapter.5}% 134
\BOOKMARK [1][-]{section.5.43}{Merge Intervals \(M\)}{chapter.5}% 135
\BOOKMARK [1][-]{section.5.44}{Insert Intervals \(H\)}{chapter.5}% 136
\BOOKMARK [1][-]{section.5.45}{Interval List Intersections \(Facebook 2019.6.28\)}{chapter.5}% 137
\BOOKMARK [1][-]{section.5.46}{Meeting Rooms \(E\)}{chapter.5}% 138
\BOOKMARK [1][-]{section.5.47}{Meeting Rooms II \(M\)}{chapter.5}% 139
\BOOKMARK [1][-]{section.5.48}{Logger Rate Limiter \(E\)}{chapter.5}% 140
\BOOKMARK [1][-]{section.5.49}{Design Hit Counter \(M\)}{chapter.5}% 141
\BOOKMARK [1][-]{section.5.50}{Flatten 2D Vector \(M\)}{chapter.5}% 142
\BOOKMARK [1][-]{section.5.51}{Zigzag Iterator \(M\)}{chapter.5}% 143
\BOOKMARK [1][-]{section.5.52}{Sparse Matrix Multiplication \(M\)}{chapter.5}% 144
\BOOKMARK [1][-]{section.5.53}{Set Matrix Zeroes \(M\)}{chapter.5}% 145
\BOOKMARK [1][-]{section.5.54}{Spiral Matrix \(M\)}{chapter.5}% 146
\BOOKMARK [1][-]{section.5.55}{Spiral Matrix II \(M\)}{chapter.5}% 147
\BOOKMARK [1][-]{section.5.56}{Spiral Matrix III \(M\)}{chapter.5}% 148
\BOOKMARK [1][-]{section.5.57}{Rotate Image \(M\)\(Amazon phone screen 2016.9.16\)}{chapter.5}% 149
\BOOKMARK [1][-]{section.5.58}{Flatten Nested List Iterator \(M\)}{chapter.5}% 150
\BOOKMARK [1][-]{section.5.59}{Nested List Weight Sum \(E\)}{chapter.5}% 151
\BOOKMARK [1][-]{section.5.60}{Nested List Weight Sum II \(M\)}{chapter.5}% 152
\BOOKMARK [1][-]{section.5.61}{Mini Parser \(M\)}{chapter.5}% 153
\BOOKMARK [1][-]{section.5.62}{Brick Wall \(M\)}{chapter.5}% 154
\BOOKMARK [0][-]{chapter.6}{String}{}% 155
\BOOKMARK [1][-]{section.6.1}{Add Binary \(E\)}{chapter.6}% 156
\BOOKMARK [1][-]{section.6.2}{Add Strings \(E\)}{chapter.6}% 157
\BOOKMARK [1][-]{section.6.3}{Multiply Strings \(M\)}{chapter.6}% 158
\BOOKMARK [1][-]{section.6.4}{Count and Say \(E\)}{chapter.6}% 159
\BOOKMARK [1][-]{section.6.5}{Length of Last Word \(E\)}{chapter.6}% 160
\BOOKMARK [1][-]{section.6.6}{Longest Common Prefix \(E\)}{chapter.6}% 161
\BOOKMARK [1][-]{section.6.7}{Implement strStr\(\) \(E\)}{chapter.6}% 162
\BOOKMARK [1][-]{section.6.8}{Is Subsequence \(M\)}{chapter.6}% 163
\BOOKMARK [1][-]{section.6.9}{Ransom Note \(E\)}{chapter.6}% 164
\BOOKMARK [1][-]{section.6.10}{Find the Difference \(M\)}{chapter.6}% 165
\BOOKMARK [1][-]{section.6.11}{First Unique Character in a String \(E\)}{chapter.6}% 166
\BOOKMARK [1][-]{section.6.12}{Permutation in String \(M\)}{chapter.6}% 167
\BOOKMARK [1][-]{section.6.13}{ZigZag Conversion \(E\)}{chapter.6}% 168
\BOOKMARK [1][-]{section.6.14}{Group Shifted Strings \(E\)}{chapter.6}% 169
\BOOKMARK [1][-]{section.6.15}{Compare Version Numbers \(E\)}{chapter.6}% 170
\BOOKMARK [1][-]{section.6.16}{Additive Number \(M\)}{chapter.6}% 171
\BOOKMARK [1][-]{section.6.17}{Evaluate Division \(M\)}{chapter.6}% 172
\BOOKMARK [1][-]{section.6.18}{Restore IP Addresses \(M\)}{chapter.6}% 173
\BOOKMARK [1][-]{section.6.19}{Simplify Path \(M\)}{chapter.6}% 174
\BOOKMARK [1][-]{section.6.20}{Longest Absolute File Path \(M\)}{chapter.6}% 175
\BOOKMARK [1][-]{section.6.21}{Valid Parentheses \(E\)}{chapter.6}% 176
\BOOKMARK [1][-]{section.6.22}{Generate Parentheses \(M\)}{chapter.6}% 177
\BOOKMARK [1][-]{section.6.23}{Different Ways to Add Parentheses \(M\)}{chapter.6}% 178
\BOOKMARK [1][-]{section.6.24}{Longest Valid Parentheses \(H\)}{chapter.6}% 179
\BOOKMARK [1][-]{section.6.25}{Remove Invalid Parentheses \(H\)}{chapter.6}% 180
\BOOKMARK [1][-]{section.6.26}{Flip Game \(E\)}{chapter.6}% 181
\BOOKMARK [1][-]{section.6.27}{Flip Game II \(M\)}{chapter.6}% 182
\BOOKMARK [1][-]{section.6.28}{Excel Sheet Column Number \(E\)}{chapter.6}% 183
\BOOKMARK [1][-]{section.6.29}{Excel Sheet Column Title \(E\)}{chapter.6}% 184
\BOOKMARK [1][-]{section.6.30}{Roman to Integer \(E\)}{chapter.6}% 185
\BOOKMARK [1][-]{section.6.31}{Integer to Roman \(M\)}{chapter.6}% 186
\BOOKMARK [1][-]{section.6.32}{Integer to English Words \(H\)}{chapter.6}% 187
\BOOKMARK [1][-]{section.6.33}{String to Integer \(atoi\) \(E\)}{chapter.6}% 188
\BOOKMARK [1][-]{section.6.34}{Reverse String \(E\)}{chapter.6}% 189
\BOOKMARK [1][-]{section.6.35}{Reverse String II \(E\)}{chapter.6}% 190
\BOOKMARK [1][-]{section.6.36}{Reverse Vowels of a String \(E\)}{chapter.6}% 191
\BOOKMARK [1][-]{section.6.37}{Reverse Words in a String \(M\)}{chapter.6}% 192
\BOOKMARK [1][-]{section.6.38}{Reverse Words in a String II \(M\)}{chapter.6}% 193
\BOOKMARK [1][-]{section.6.39}{Reverse Words in a String III \(E\)}{chapter.6}% 194
\BOOKMARK [1][-]{section.6.40}{Valid Anagram \(E\)}{chapter.6}% 195
\BOOKMARK [1][-]{section.6.41}{Group Anagrams \(M\)}{chapter.6}% 196
\BOOKMARK [1][-]{section.6.42}{Valid Palindrome \(E\)}{chapter.6}% 197
\BOOKMARK [1][-]{section.6.43}{Valid Palindrome II \(E\)}{chapter.6}% 198
\BOOKMARK [1][-]{section.6.44}{Palindromic Substrings \(M\)}{chapter.6}% 199
\BOOKMARK [1][-]{section.6.45}{Longest Palindromic Substring \(M\)}{chapter.6}% 200
\BOOKMARK [1][-]{section.6.46}{Longest Palindromic Subsequence \(M\)}{chapter.6}% 201
\BOOKMARK [1][-]{section.6.47}{Palindrome Permutation \(E\)}{chapter.6}% 202
\BOOKMARK [1][-]{section.6.48}{Palindrome Permutation II \(M\)}{chapter.6}% 203
\BOOKMARK [1][-]{section.6.49}{Palindrome Partitioning \(M\)}{chapter.6}% 204
\BOOKMARK [1][-]{section.6.50}{Palindrome Partitioning II \(H\)}{chapter.6}% 205
\BOOKMARK [1][-]{section.6.51}{Longest Substring Without Repeating Characters \(M\)}{chapter.6}% 206
\BOOKMARK [1][-]{section.6.52}{Longest Substring with At Least K Repeating Characters \(M\)}{chapter.6}% 207
\BOOKMARK [1][-]{section.6.53}{Longest Substring with At Most Two Distinct Characters \(H\)}{chapter.6}% 208
\BOOKMARK [1][-]{section.6.54}{Longest Substring with At Most K Distinct Characters \(H\)}{chapter.6}% 209
\BOOKMARK [1][-]{section.6.55}{Minimum Window Substring \(H\)}{chapter.6}% 210
\BOOKMARK [1][-]{section.6.56}{Isomorphic Strings \(E\)}{chapter.6}% 211
\BOOKMARK [1][-]{section.6.57}{Word Pattern \(E\)}{chapter.6}% 212
\BOOKMARK [1][-]{section.6.58}{Word Pattern II \(H\)}{chapter.6}% 213
\BOOKMARK [1][-]{section.6.59}{Word Break \(M\)}{chapter.6}% 214
\BOOKMARK [1][-]{section.6.60}{Word Break II \(H\)}{chapter.6}% 215
\BOOKMARK [1][-]{section.6.61}{Shortest Word Distance \(E\)}{chapter.6}% 216
\BOOKMARK [1][-]{section.6.62}{Shortest Word Distance II \(M\)}{chapter.6}% 217
\BOOKMARK [1][-]{section.6.63}{Shortest Word Distance III \(M\)}{chapter.6}% 218
\BOOKMARK [1][-]{section.6.64}{Strobogrammatic Number \(E\)}{chapter.6}% 219
\BOOKMARK [1][-]{section.6.65}{Strobogrammatic Number II \(M\)}{chapter.6}% 220
\BOOKMARK [1][-]{section.6.66}{Strobogrammatic Number III \(M\)}{chapter.6}% 221
\BOOKMARK [1][-]{section.6.67}{Unique Word Abbreviation \(E\)}{chapter.6}% 222
\BOOKMARK [1][-]{section.6.68}{Generalized Abbreviation \(M\)}{chapter.6}% 223
\BOOKMARK [1][-]{section.6.69}{One Edit Distance \(M\)}{chapter.6}% 224
\BOOKMARK [1][-]{section.6.70}{Edit Distance \(H\)}{chapter.6}% 225
\BOOKMARK [1][-]{section.6.71}{String Compression \(E\)}{chapter.6}% 226
\BOOKMARK [1][-]{section.6.72}{Encode and Decode Strings \(M\)}{chapter.6}% 227
\BOOKMARK [1][-]{section.6.73}{Decode String \(M\)}{chapter.6}% 228
\BOOKMARK [1][-]{section.6.74}{Read N Characters Given Read4 \(E\)}{chapter.6}% 229
\BOOKMARK [1][-]{section.6.75}{Read N Characters Given Read4 II \(H\)}{chapter.6}% 230
\BOOKMARK [1][-]{section.6.76}{Remove Comments \(M\)}{chapter.6}% 231
\BOOKMARK [1][-]{section.6.77}{Maximum Swap \(M\)}{chapter.6}% 232
\BOOKMARK [1][-]{section.6.78}{Verifying an Alien Dictionary \(E\)}{chapter.6}% 233
\BOOKMARK [0][-]{chapter.7}{Tree}{}% 234
\BOOKMARK [1][-]{section.7.1}{Binary Tree Construction}{chapter.7}% 235
\BOOKMARK [2][-]{subsection.7.1.1}{Construct Binary Tree from Preorder and Inorder Traversal \(M\)}{section.7.1}% 236
\BOOKMARK [2][-]{subsection.7.1.2}{Construct Binary Tree from Inorder and Postorder Traversal \(M\)}{section.7.1}% 237
\BOOKMARK [2][-]{subsection.7.1.3}{Construct Binary Tree from Preorder and Postorder Traversal \(M\)}{section.7.1}% 238
\BOOKMARK [2][-]{subsection.7.1.4}{Construct Binary Search Tree from Preorder Traversal \(M\)}{section.7.1}% 239
\BOOKMARK [2][-]{subsection.7.1.5}{Serialize and Deserialize Binary Tree \(H\)}{section.7.1}% 240
\BOOKMARK [2][-]{subsection.7.1.6}{Serialize and Deserialize BST \(M\)}{section.7.1}% 241
\BOOKMARK [2][-]{subsection.7.1.7}{Serialize and Deserialize N-ary Tree \(H\)}{section.7.1}% 242
\BOOKMARK [2][-]{subsection.7.1.8}{Verify Preorder Serialization of a Binary Tree \(M\)}{section.7.1}% 243
\BOOKMARK [1][-]{section.7.2}{Binary Tree Traversal}{chapter.7}% 244
\BOOKMARK [2][-]{subsection.7.2.1}{Binary Tree Preorder Traversal \(M\)}{section.7.2}% 245
\BOOKMARK [2][-]{subsection.7.2.2}{Binary Tree Inorder Traversal \(M\)}{section.7.2}% 246
\BOOKMARK [2][-]{subsection.7.2.3}{Binary Tree Postorder Traversal \(H\)}{section.7.2}% 247
\BOOKMARK [2][-]{subsection.7.2.4}{Binary Tree Level Order Traversal \(E\)}{section.7.2}% 248
\BOOKMARK [2][-]{subsection.7.2.5}{Binary Tree Level Order Traversal II \(E\)}{section.7.2}% 249
\BOOKMARK [2][-]{subsection.7.2.6}{Binary Tree Zigzag Level Order Traversal \(M\)}{section.7.2}% 250
\BOOKMARK [2][-]{subsection.7.2.7}{Binary Tree Vertical Order Traversal \(M\)}{section.7.2}% 251
\BOOKMARK [2][-]{subsection.7.2.8}{Binary Tree Right Side View \(M\)}{section.7.2}% 252
\BOOKMARK [2][-]{subsection.7.2.9}{Populating Next Right Pointers in Each Node \(M\)}{section.7.2}% 253
\BOOKMARK [2][-]{subsection.7.2.10}{Populating Next Right Pointers in Each Node II \(H\)}{section.7.2}% 254
\BOOKMARK [1][-]{section.7.3}{Binary Tree Recursion}{chapter.7}% 255
\BOOKMARK [2][-]{subsection.7.3.1}{Same Tree \(E\)}{section.7.3}% 256
\BOOKMARK [2][-]{subsection.7.3.2}{Symmetric Tree \(E\)}{section.7.3}% 257
\BOOKMARK [2][-]{subsection.7.3.3}{Invert Binary Tree \(E\)}{section.7.3}% 258
\BOOKMARK [2][-]{subsection.7.3.4}{Binary Tree Upside Down \(M\)}{section.7.3}% 259
\BOOKMARK [2][-]{subsection.7.3.5}{Lowest Common Ancestor of a Binary Tree \(M\)}{section.7.3}% 260
\BOOKMARK [2][-]{subsection.7.3.6}{Binary Tree Longest Consecutive Sequence \(M\)}{section.7.3}% 261
\BOOKMARK [2][-]{subsection.7.3.7}{Count Univalue Subtrees \(M\)}{section.7.3}% 262
\BOOKMARK [2][-]{subsection.7.3.8}{Find Leaves of Binary Tree \(M\)}{section.7.3}% 263
\BOOKMARK [2][-]{subsection.7.3.9}{Flatten Binary Tree to Linked List \(M\)}{section.7.3}% 264
\BOOKMARK [2][-]{subsection.7.3.10}{Balanced Binary Tree \(E\)}{section.7.3}% 265
\BOOKMARK [2][-]{subsection.7.3.11}{Check Completeness of a Binary Tree \(M\)}{section.7.3}% 266
\BOOKMARK [2][-]{subsection.7.3.12}{Count Complete Tree Nodes \(M\)}{section.7.3}% 267
\BOOKMARK [2][-]{subsection.7.3.13}{Minimum Depth of Binary Tree \(E\)}{section.7.3}% 268
\BOOKMARK [2][-]{subsection.7.3.14}{Maximum Depth of Binary Tree \(E\)}{section.7.3}% 269
\BOOKMARK [2][-]{subsection.7.3.15}{Maximum Depth of N-ary Tree \(E\)}{section.7.3}% 270
\BOOKMARK [2][-]{subsection.7.3.16}{Maximum Width of Binary Tree \(M\)}{section.7.3}% 271
\BOOKMARK [2][-]{subsection.7.3.17}{Diameter of Binary Tree \(E\)}{section.7.3}% 272
\BOOKMARK [2][-]{subsection.7.3.18}{Print Binary Tree \(M\)}{section.7.3}% 273
\BOOKMARK [2][-]{subsection.7.3.19}{Maximum Binary Tree \(M\)}{section.7.3}% 274
\BOOKMARK [2][-]{subsection.7.3.20}{Maximum Binary Tree II \(M\)}{section.7.3}% 275
\BOOKMARK [2][-]{subsection.7.3.21}{Binary Tree Paths \(E\)}{section.7.3}% 276
\BOOKMARK [2][-]{subsection.7.3.22}{Path Sum \(E\)}{section.7.3}% 277
\BOOKMARK [2][-]{subsection.7.3.23}{Path Sum II \(M\)}{section.7.3}% 278
\BOOKMARK [2][-]{subsection.7.3.24}{Path Sum III \(E\)}{section.7.3}% 279
\BOOKMARK [2][-]{subsection.7.3.25}{Sum Root to Leaf Numbers \(M\)}{section.7.3}% 280
\BOOKMARK [2][-]{subsection.7.3.26}{Binary Tree Maximum Path Sum \(H\)}{section.7.3}% 281
\BOOKMARK [2][-]{subsection.7.3.27}{Binary Tree Path Sum of Two Nodes \(Philips on-sight 2016.09\)}{section.7.3}% 282
\BOOKMARK [1][-]{section.7.4}{Binary Search Tree}{chapter.7}% 283
\BOOKMARK [2][-]{subsection.7.4.1}{Lowest Common Ancestor of a Binary Search Tree \(E\)}{section.7.4}% 284
\BOOKMARK [2][-]{subsection.7.4.2}{Validate Binary Search Tree \(M\)}{section.7.4}% 285
\BOOKMARK [2][-]{subsection.7.4.3}{Trim a Binary Search Tree \(M\)}{section.7.4}% 286
\BOOKMARK [2][-]{subsection.7.4.4}{Binary Search Tree Iterator \(M\)}{section.7.4}% 287
\BOOKMARK [2][-]{subsection.7.4.5}{Recover Binary Search Tree \(H\)}{section.7.4}% 288
\BOOKMARK [2][-]{subsection.7.4.6}{Kth Smallest Element in a BST \(M\)}{section.7.4}% 289
\BOOKMARK [2][-]{subsection.7.4.7}{Verify Preorder Sequence in Binary Search Tree \(M\)}{section.7.4}% 290
\BOOKMARK [2][-]{subsection.7.4.8}{Inorder Successor in BST \(M\)}{section.7.4}% 291
\BOOKMARK [2][-]{subsection.7.4.9}{Inorder Successor in BST II \(M\)}{section.7.4}% 292
\BOOKMARK [2][-]{subsection.7.4.10}{Largest BST Subtree \(M\)}{section.7.4}% 293
\BOOKMARK [2][-]{subsection.7.4.11}{Unique Binary Search Trees \(M\)}{section.7.4}% 294
\BOOKMARK [2][-]{subsection.7.4.12}{Unique Binary Search Trees II \(M\)}{section.7.4}% 295
\BOOKMARK [2][-]{subsection.7.4.13}{Convert Sorted Array to Binary Search Tree \(M\)}{section.7.4}% 296
\BOOKMARK [2][-]{subsection.7.4.14}{Convert Sorted List to Binary Search Tree \(M\)}{section.7.4}% 297
\BOOKMARK [2][-]{subsection.7.4.15}{Convert Binary Search Tree to Sorted Doubly Linked List \(M\)}{section.7.4}% 298
\BOOKMARK [2][-]{subsection.7.4.16}{Closest Binary Search Tree Value \(E\)}{section.7.4}% 299
\BOOKMARK [2][-]{subsection.7.4.17}{Closest Binary Search Tree Value II \(H\)}{section.7.4}% 300
\BOOKMARK [2][-]{subsection.7.4.18}{Range Sum BST \(E\)}{section.7.4}% 301
\BOOKMARK [0][-]{chapter.8}{Sorting}{}% 302
\BOOKMARK [1][-]{section.8.1}{Largest Number \(M\)}{chapter.8}% 303
\BOOKMARK [1][-]{section.8.2}{Sort Colors \(M\)}{chapter.8}% 304
\BOOKMARK [1][-]{section.8.3}{Wiggle Sort \(M\)}{chapter.8}% 305
\BOOKMARK [1][-]{section.8.4}{Wiggle Sort II \(M\)}{chapter.8}% 306
\BOOKMARK [1][-]{section.8.5}{Wiggle Subsequence \(M\)}{chapter.8}% 307
\BOOKMARK [1][-]{section.8.6}{Sort List \(M\)}{chapter.8}% 308
\BOOKMARK [1][-]{section.8.7}{Insertion Sort List \(M\)}{chapter.8}% 309
\BOOKMARK [0][-]{chapter.9}{Binary Search}{}% 310
\BOOKMARK [1][-]{section.9.1}{First Bad Version \(E\)}{chapter.9}% 311
\BOOKMARK [1][-]{section.9.2}{Find the Duplicate Number \(H\)}{chapter.9}% 312
\BOOKMARK [1][-]{section.9.3}{Search for a Range \(M\)}{chapter.9}% 313
\BOOKMARK [1][-]{section.9.4}{Search Insert Position \(M\)}{chapter.9}% 314
\BOOKMARK [1][-]{section.9.5}{Find Peak Element \(M\)}{chapter.9}% 315
\BOOKMARK [1][-]{section.9.6}{Search a 2D Matrix \(M\)}{chapter.9}% 316
\BOOKMARK [1][-]{section.9.7}{Search a 2D Matrix II \(M\)}{chapter.9}% 317
\BOOKMARK [1][-]{section.9.8}{Guess Number Higher or Lower \(E\)}{chapter.9}% 318
\BOOKMARK [1][-]{section.9.9}{Guess Number Higher or Lower II \(M\)}{chapter.9}% 319
\BOOKMARK [1][-]{section.9.10}{Find Minimum in Rotated Sorted Array \(M\)}{chapter.9}% 320
\BOOKMARK [1][-]{section.9.11}{Find Minimum in Rotated Sorted Array II \(H\)}{chapter.9}% 321
\BOOKMARK [1][-]{section.9.12}{Search in Rotated Sorted Array \(M\)}{chapter.9}% 322
\BOOKMARK [1][-]{section.9.13}{Search in Rotated Sorted Array II \(M\)}{chapter.9}% 323
\BOOKMARK [1][-]{section.9.14}{Median of Two Sorted Arrays \(H\)}{chapter.9}% 324
\BOOKMARK [0][-]{chapter.10}{DFS and BFS}{}% 325
\BOOKMARK [1][-]{section.10.1}{Subset \(M\)}{chapter.10}% 326
\BOOKMARK [1][-]{section.10.2}{Subset II \(M\)}{chapter.10}% 327
\BOOKMARK [1][-]{section.10.3}{Permutations \(M\)}{chapter.10}% 328
\BOOKMARK [1][-]{section.10.4}{Permutations II \(M\)}{chapter.10}% 329
\BOOKMARK [1][-]{section.10.5}{Next Permutation \(Facebook Onsite 2019.6.28\)}{chapter.10}% 330
\BOOKMARK [1][-]{section.10.6}{Permutation Sequence \(M\)}{chapter.10}% 331
\BOOKMARK [1][-]{section.10.7}{Combinations \(M\)}{chapter.10}% 332
\BOOKMARK [1][-]{section.10.8}{Combination Sum \(M\)}{chapter.10}% 333
\BOOKMARK [1][-]{section.10.9}{Combination Sum II \(M\)}{chapter.10}% 334
\BOOKMARK [1][-]{section.10.10}{Combination Sum III \(M\)}{chapter.10}% 335
\BOOKMARK [1][-]{section.10.11}{Combination Sum IV \(M\)}{chapter.10}% 336
\BOOKMARK [1][-]{section.10.12}{Target Sum \(M\)}{chapter.10}% 337
\BOOKMARK [1][-]{section.10.13}{Factor Combinations \(M\)}{chapter.10}% 338
\BOOKMARK [1][-]{section.10.14}{Letter Combinations of a Phone Number \(M\)}{chapter.10}% 339
\BOOKMARK [1][-]{section.10.15}{Walls and Gates \(M\)}{chapter.10}% 340
\BOOKMARK [1][-]{section.10.16}{Shortest Path in Binary Matrix \(M\)}{chapter.10}% 341
\BOOKMARK [1][-]{section.10.17}{Surrounded Regions \(M\)}{chapter.10}% 342
\BOOKMARK [1][-]{section.10.18}{Battleships in a Board \(M\)}{chapter.10}% 343
\BOOKMARK [1][-]{section.10.19}{Number of Islands \(M\)}{chapter.10}% 344
\BOOKMARK [1][-]{section.10.20}{Number of Islands II \(H\)}{chapter.10}% 345
\BOOKMARK [1][-]{section.10.21}{Word Search \(M\)}{chapter.10}% 346
\BOOKMARK [1][-]{section.10.22}{Word Search debugging \(Microsoft phone interview 2019.5.31\)}{chapter.10}% 347
\BOOKMARK [1][-]{section.10.23}{Word Search II \(H\)}{chapter.10}% 348
\BOOKMARK [1][-]{section.10.24}{Accounts Merge \(M\)}{chapter.10}% 349
\BOOKMARK [1][-]{section.10.25}{Word Ladder \(M\)}{chapter.10}% 350
\BOOKMARK [1][-]{section.10.26}{Word Ladder II \(H\)}{chapter.10}% 351
\BOOKMARK [1][-]{section.10.27}{Course Schedule \(M\)}{chapter.10}% 352
\BOOKMARK [1][-]{section.10.28}{Course Schedule II \(M\)}{chapter.10}% 353
\BOOKMARK [1][-]{section.10.29}{Course Schedule III \(H\)}{chapter.10}% 354
\BOOKMARK [1][-]{section.10.30}{Alien Dictionary \(H\)}{chapter.10}% 355
\BOOKMARK [0][-]{chapter.11}{Dynamic Programming}{}% 356
\BOOKMARK [1][-]{section.11.1}{Gas Station \(M\)}{chapter.11}% 357
\BOOKMARK [1][-]{section.11.2}{Combination Sum IV \(M\)}{chapter.11}% 358
\BOOKMARK [1][-]{section.11.3}{Perfect Squares \(M\)}{chapter.11}% 359
\BOOKMARK [1][-]{section.11.4}{Coin Change \(M\)}{chapter.11}% 360
\BOOKMARK [1][-]{section.11.5}{Largest Divisible Subset \(M\)}{chapter.11}% 361
\BOOKMARK [1][-]{section.11.6}{Climbing Stairs \(E\)}{chapter.11}% 362
\BOOKMARK [1][-]{section.11.7}{Decode Ways \(M\)}{chapter.11}% 363
\BOOKMARK [1][-]{section.11.8}{Number of ways for mapping integers to alphabets \(The Climate Corporation phone screen 2016.9.22\)}{chapter.11}% 364
\BOOKMARK [1][-]{section.11.9}{Jump Game \(M\)}{chapter.11}% 365
\BOOKMARK [1][-]{section.11.10}{Jump Game II \(M\)}{chapter.11}% 366
\BOOKMARK [1][-]{section.11.11}{Best Time to Buy and Sell Stock \(E\)}{chapter.11}% 367
\BOOKMARK [1][-]{section.11.12}{Best Time to Buy and Sell Stock II \(E\)}{chapter.11}% 368
\BOOKMARK [1][-]{section.11.13}{Best Time to Buy and Sell Stock with Cooldown \(M\)}{chapter.11}% 369
\BOOKMARK [1][-]{section.11.14}{Best Time to Buy and Sell Stock with Transaction Fee \(M\)}{chapter.11}% 370
\BOOKMARK [1][-]{section.11.15}{Best Time to Buy and Sell Stock III \(H\)}{chapter.11}% 371
\BOOKMARK [1][-]{section.11.16}{Best Time to Buy and Sell Stock IV \(H\)}{chapter.11}% 372
\BOOKMARK [1][-]{section.11.17}{House Robber \(E\)}{chapter.11}% 373
\BOOKMARK [1][-]{section.11.18}{House Robber II \(M\)}{chapter.11}% 374
\BOOKMARK [1][-]{section.11.19}{House Robber III \(M\)}{chapter.11}% 375
\BOOKMARK [1][-]{section.11.20}{Paint Fence \(E\)}{chapter.11}% 376
\BOOKMARK [1][-]{section.11.21}{Paint House \(M\)}{chapter.11}% 377
\BOOKMARK [1][-]{section.11.22}{Paint House II \(H\)}{chapter.11}% 378
\BOOKMARK [1][-]{section.11.23}{Pascal's Triangle \(E\)}{chapter.11}% 379
\BOOKMARK [1][-]{section.11.24}{Pascal's Triangle II \(E\)}{chapter.11}% 380
\BOOKMARK [1][-]{section.11.25}{Range Sum Query - Immutable \(E\)}{chapter.11}% 381
\BOOKMARK [1][-]{section.11.26}{Range Sum Query - Mutable \(M\)}{chapter.11}% 382
\BOOKMARK [1][-]{section.11.27}{Range Sum Query 2D - Immutable \(M\)}{chapter.11}% 383
\BOOKMARK [1][-]{section.11.28}{Triangle \(M\)}{chapter.11}% 384
\BOOKMARK [1][-]{section.11.29}{Unique Paths \(M\)}{chapter.11}% 385
\BOOKMARK [1][-]{section.11.30}{Unique Paths II \(M\)}{chapter.11}% 386
\BOOKMARK [1][-]{section.11.31}{Minimum Path Sum \(M\)}{chapter.11}% 387
\BOOKMARK [1][-]{section.11.32}{Dungeon Game \(H\)}{chapter.11}% 388
\BOOKMARK [1][-]{section.11.33}{Increasing Triplet Subsequence \(M\)}{chapter.11}% 389
\BOOKMARK [1][-]{section.11.34}{Longest Continuous Increasing Subsequence \(E\)}{chapter.11}% 390
\BOOKMARK [1][-]{section.11.35}{Longest Increasing Subsequence \(M\)}{chapter.11}% 391
\BOOKMARK [1][-]{section.11.36}{Number of Longest Increasing Subsequence \(M\)}{chapter.11}% 392
\BOOKMARK [1][-]{section.11.37}{Longest Consecutive Sequence \(H\)}{chapter.11}% 393
\BOOKMARK [1][-]{section.11.38}{Longest Increasing Path in a Matrix \(M\)}{chapter.11}% 394
\BOOKMARK [1][-]{section.11.39}{Maximal Square \(M\)}{chapter.11}% 395
\BOOKMARK [1][-]{section.11.40}{Maximal Rectangle \(H\)}{chapter.11}% 396
\BOOKMARK [0][-]{chapter.12}{Graph}{}% 397
\BOOKMARK [1][-]{section.12.1}{Number of Connected Components in an Undirected Graph \(M\)}{chapter.12}% 398
\BOOKMARK [1][-]{section.12.2}{Graph Valid Tree \(M\)}{chapter.12}% 399
\BOOKMARK [1][-]{section.12.3}{Copy List with Random Pointer \(M\)}{chapter.12}% 400
\BOOKMARK [1][-]{section.12.4}{Clone Graph \(M\)}{chapter.12}% 401
\BOOKMARK [1][-]{section.12.5}{Course Schedule \(M\)}{chapter.12}% 402
\BOOKMARK [1][-]{section.12.6}{Course Schedule II \(M\)}{chapter.12}% 403
\BOOKMARK [1][-]{section.12.7}{Minimum Height Trees \(M\)}{chapter.12}% 404
\BOOKMARK [1][-]{section.12.8}{Reconstruct Itinerary \(M\)}{chapter.12}% 405
\BOOKMARK [0][-]{chapter.13}{Design and Implementation}{}% 406
\BOOKMARK [1][-]{section.13.1}{Valid Sudoku \(E\)}{chapter.13}% 407
\BOOKMARK [1][-]{section.13.2}{Sudoku Solver \(H\)}{chapter.13}% 408
\BOOKMARK [1][-]{section.13.3}{Boom Enemy \(M\)}{chapter.13}% 409
\BOOKMARK [1][-]{section.13.4}{Android Unlock Patterns \(M\)}{chapter.13}% 410
\BOOKMARK [1][-]{section.13.5}{Game of Life \(M\)}{chapter.13}% 411
\BOOKMARK [1][-]{section.13.6}{Peeking Iterator \(M\)}{chapter.13}% 412
\BOOKMARK [1][-]{section.13.7}{LRU Cache \(H\)}{chapter.13}% 413
\BOOKMARK [1][-]{section.13.8}{Design Tic-Tac-Toe \(M\)}{chapter.13}% 414
\BOOKMARK [1][-]{section.13.9}{Design Snake Game \(M\)}{chapter.13}% 415
\BOOKMARK [1][-]{section.13.10}{Design Phone Directory \(M\)}{chapter.13}% 416
\BOOKMARK [1][-]{section.13.11}{Design Twitter \(M\)}{chapter.13}% 417
\BOOKMARK [1][-]{section.13.12}{Insert Delete GetRandom O\(1\) \(H\)}{chapter.13}% 418
\BOOKMARK [1][-]{section.13.13}{Insert Delete GetRandom O\(1\) - Duplicates allowed ? \(H\)}{chapter.13}% 419
\BOOKMARK [1][-]{section.13.14}{Basic Calculator \(H\)}{chapter.13}% 420
\BOOKMARK [1][-]{section.13.15}{Basic Calculator II \(M\)}{chapter.13}% 421
\BOOKMARK [1][-]{section.13.16}{Expression Add Operators \(H\)}{chapter.13}% 422
\BOOKMARK [1][-]{section.13.17}{Implement Trie \(Prefix Tree\) \(M\)}{chapter.13}% 423
\BOOKMARK [1][-]{section.13.18}{Add and Search Word - Data structure design \(M\)}{chapter.13}% 424
\BOOKMARK [1][-]{section.13.19}{Design HashSet \(M\)}{chapter.13}% 425
\BOOKMARK [1][-]{section.13.20}{Design HashMap \(M\)}{chapter.13}% 426
\BOOKMARK [1][-]{section.13.21}{Sparse Vector Dot Product \(FB high frequency\)}{chapter.13}% 427
