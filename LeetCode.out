\BOOKMARK [0][-]{chapter.1}{Math}{}% 1
\BOOKMARK [1][-]{section.1.1}{Nim Game \(E\)}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Bulb Switcher \(M\)}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{Find the Celebrity \(M\)}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{Factorial Trailing Zeroes \(E\)}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.5}{Palindrome Number \(E\)}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.6}{Reverse Integer \(E\)}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.7}{Count Numbers with Unique Digits \(M\)}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.8}{Integer Break \(M\)}{chapter.1}% 9
\BOOKMARK [1][-]{section.1.9}{Plus One \(E\)}{chapter.1}% 10
\BOOKMARK [1][-]{section.1.10}{Add Digits \(E\)}{chapter.1}% 11
\BOOKMARK [1][-]{section.1.11}{Happy Number \(E\)}{chapter.1}% 12
\BOOKMARK [1][-]{section.1.12}{Ugly Number \(E\)}{chapter.1}% 13
\BOOKMARK [1][-]{section.1.13}{Ugly Number II \(M\)}{chapter.1}% 14
\BOOKMARK [1][-]{section.1.14}{Super Ugly Number \(M\)}{chapter.1}% 15
\BOOKMARK [1][-]{section.1.15}{Count Primes \(E\)}{chapter.1}% 16
\BOOKMARK [1][-]{section.1.16}{Pow\(x, n\) \(M\)}{chapter.1}% 17
\BOOKMARK [1][-]{section.1.17}{Super Pow \(M\)}{chapter.1}% 18
\BOOKMARK [1][-]{section.1.18}{Sqrt\(x\) \(M\)}{chapter.1}% 19
\BOOKMARK [1][-]{section.1.19}{Valid Perfect Square \(M\)}{chapter.1}% 20
\BOOKMARK [1][-]{section.1.20}{Rectangle Area \(E\)}{chapter.1}% 21
\BOOKMARK [1][-]{section.1.21}{Container With Most Water \(M\)}{chapter.1}% 22
\BOOKMARK [1][-]{section.1.22}{Trapping Rain Water \(H\)}{chapter.1}% 23
\BOOKMARK [1][-]{section.1.23}{Largest Rectangle in Histogram \(H\)}{chapter.1}% 24
\BOOKMARK [0][-]{chapter.2}{Bit Manipulation}{}% 25
\BOOKMARK [1][-]{section.2.1}{Sum of Two Integers \(E\)}{chapter.2}% 26
\BOOKMARK [1][-]{section.2.2}{Grey Code \(M\)}{chapter.2}% 27
\BOOKMARK [1][-]{section.2.3}{Power of Two \(E\)}{chapter.2}% 28
\BOOKMARK [1][-]{section.2.4}{Power of Three \(E\)}{chapter.2}% 29
\BOOKMARK [1][-]{section.2.5}{Power of Four \(E\)}{chapter.2}% 30
\BOOKMARK [1][-]{section.2.6}{Number of 1 Bits \(E\)}{chapter.2}% 31
\BOOKMARK [1][-]{section.2.7}{Counting Bits \(M\)}{chapter.2}% 32
\BOOKMARK [1][-]{section.2.8}{Reverse Bits \(E\)}{chapter.2}% 33
\BOOKMARK [1][-]{section.2.9}{Single Number \(E\)}{chapter.2}% 34
\BOOKMARK [1][-]{section.2.10}{Single Number II \(M\)}{chapter.2}% 35
\BOOKMARK [1][-]{section.2.11}{Single Number III \(M\)}{chapter.2}% 36
\BOOKMARK [1][-]{section.2.12}{Binary Clock \(Google Interview 8.15.2016\)}{chapter.2}% 37
\BOOKMARK [0][-]{chapter.3}{Linked List}{}% 38
\BOOKMARK [1][-]{section.3.1}{Intersection of Two Linked Lists \(E\)}{chapter.3}% 39
\BOOKMARK [1][-]{section.3.2}{Plus One Linked List \(E\)}{chapter.3}% 40
\BOOKMARK [1][-]{section.3.3}{Reverse Linked List \(E\)}{chapter.3}% 41
\BOOKMARK [1][-]{section.3.4}{Rotate Linked List \(E\)}{chapter.3}% 42
\BOOKMARK [1][-]{section.3.5}{Palindrome Linked List \(E\)}{chapter.3}% 43
\BOOKMARK [1][-]{section.3.6}{Swap Nodes in Pairs \(E\)}{chapter.3}% 44
\BOOKMARK [1][-]{section.3.7}{Odd Even Linked List \(M\)}{chapter.3}% 45
\BOOKMARK [1][-]{section.3.8}{Linked List Random Node \(M\)}{chapter.3}% 46
\BOOKMARK [1][-]{section.3.9}{Delete Node in a Linked List \(E\)}{chapter.3}% 47
\BOOKMARK [1][-]{section.3.10}{Remove Linked List Elements \(E\)}{chapter.3}% 48
\BOOKMARK [1][-]{section.3.11}{Remove Nth Node From End of List \(E\)}{chapter.3}% 49
\BOOKMARK [1][-]{section.3.12}{Remove Duplicates from Sorted List \(E\)}{chapter.3}% 50
\BOOKMARK [1][-]{section.3.13}{Remove Duplicates from Sorted List II \(M\)}{chapter.3}% 51
\BOOKMARK [1][-]{section.3.14}{Linked List Cycle \(E\)}{chapter.3}% 52
\BOOKMARK [1][-]{section.3.15}{Linked List Cycle II \(M\)}{chapter.3}% 53
\BOOKMARK [1][-]{section.3.16}{Merge Two Sorted Lists \(E\)}{chapter.3}% 54
\BOOKMARK [1][-]{section.3.17}{Merge k Sorted Lists \(H\)}{chapter.3}% 55
\BOOKMARK [1][-]{section.3.18}{Flatten Nested List Iterator \(M\)}{chapter.3}% 56
\BOOKMARK [1][-]{section.3.19}{Nested List Weight Sum \(E\)}{chapter.3}% 57
\BOOKMARK [1][-]{section.3.20}{Nested List Weight Sum II \(M\)}{chapter.3}% 58
\BOOKMARK [1][-]{section.3.21}{Mini Parser \(M\)}{chapter.3}% 59
\BOOKMARK [0][-]{chapter.4}{Stack and Queue}{}% 60
\BOOKMARK [1][-]{section.4.1}{Implement Stack using Queues \(E\)}{chapter.4}% 61
\BOOKMARK [1][-]{section.4.2}{Implement Queue using Stacks \(E\)}{chapter.4}% 62
\BOOKMARK [1][-]{section.4.3}{Min Stack \(E\)}{chapter.4}% 63
\BOOKMARK [1][-]{section.4.4}{Moving Average from Data Stream \(E\)}{chapter.4}% 64
\BOOKMARK [0][-]{chapter.5}{Array}{}% 65
\BOOKMARK [1][-]{section.5.1}{Bulls and Cows \(E\)}{chapter.5}% 66
\BOOKMARK [1][-]{section.5.2}{Rotate Array \(E\)}{chapter.5}% 67
\BOOKMARK [1][-]{section.5.3}{Move Zeros \(E\)}{chapter.5}% 68
\BOOKMARK [1][-]{section.5.4}{Remove Element \(E\)}{chapter.5}% 69
\BOOKMARK [1][-]{section.5.5}{Remove Duplicates from Sorted Array \(E\)}{chapter.5}% 70
\BOOKMARK [1][-]{section.5.6}{Kth Largest Element in an Array \(M\)}{chapter.5}% 71
\BOOKMARK [1][-]{section.5.7}{Shuffle an Array \(M\)}{chapter.5}% 72
\BOOKMARK [1][-]{section.5.8}{Missing Number \(M\)}{chapter.5}% 73
\BOOKMARK [1][-]{section.5.9}{First Missing Positive \(H\)}{chapter.5}% 74
\BOOKMARK [1][-]{section.5.10}{Intersection of Two Arrays \(E\)}{chapter.5}% 75
\BOOKMARK [1][-]{section.5.11}{Intersection of Two Arrays II \(E\)}{chapter.5}% 76
\BOOKMARK [1][-]{section.5.12}{Merge Sorted Array \(E\)}{chapter.5}% 77
\BOOKMARK [1][-]{section.5.13}{Sort Transformed Array \(M\)}{chapter.5}% 78
\BOOKMARK [1][-]{section.5.14}{Majority Element \(E\)}{chapter.5}% 79
\BOOKMARK [1][-]{section.5.15}{Majority Element II \(M\)}{chapter.5}% 80
\BOOKMARK [1][-]{section.5.16}{Contains Duplicate \(E\)}{chapter.5}% 81
\BOOKMARK [1][-]{section.5.17}{Contains Duplicate II \(E\)}{chapter.5}% 82
\BOOKMARK [1][-]{section.5.18}{Contains Duplicate III \(M\)}{chapter.5}% 83
\BOOKMARK [1][-]{section.5.19}{Find the Duplicate Number \(H\)}{chapter.5}% 84
\BOOKMARK [1][-]{section.5.20}{Top K Frequent Elements \(M\)}{chapter.5}% 85
\BOOKMARK [1][-]{section.5.21}{Two Sum \(E\)}{chapter.5}% 86
\BOOKMARK [1][-]{section.5.22}{Two Sum II \(M\)}{chapter.5}% 87
\BOOKMARK [1][-]{section.5.23}{Two Sum III \(E\)}{chapter.5}% 88
\BOOKMARK [1][-]{section.5.24}{3Sum \(M\)}{chapter.5}% 89
\BOOKMARK [1][-]{section.5.25}{3Sum Closest \(M\)}{chapter.5}% 90
\BOOKMARK [1][-]{section.5.26}{3Sum Smaller \(M\)}{chapter.5}% 91
\BOOKMARK [1][-]{section.5.27}{4Sum \(M\)}{chapter.5}% 92
\BOOKMARK [1][-]{section.5.28}{Maximum Subarray \(M\)}{chapter.5}% 93
\BOOKMARK [1][-]{section.5.29}{Range Addition \(M\)}{chapter.5}% 94
\BOOKMARK [1][-]{section.5.30}{Maximum Product Subarray \(M\)}{chapter.5}% 95
\BOOKMARK [1][-]{section.5.31}{Product of Array Except Self \(M\)}{chapter.5}% 96
\BOOKMARK [1][-]{section.5.32}{Maximum Size Subarray Sum Equals k \(M\)}{chapter.5}% 97
\BOOKMARK [1][-]{section.5.33}{Minimum Size Subarray Sum \(M\)}{chapter.5}% 98
\BOOKMARK [1][-]{section.5.34}{Meeting Rooms \(E\)}{chapter.5}% 99
\BOOKMARK [1][-]{section.5.35}{Meeting Rooms II \(M\)}{chapter.5}% 100
\BOOKMARK [1][-]{section.5.36}{Logger Rate Limiter \(E\)}{chapter.5}% 101
\BOOKMARK [1][-]{section.5.37}{Design Hit Counter \(M\)}{chapter.5}% 102
\BOOKMARK [1][-]{section.5.38}{Flatten 2D Vector \(M\)}{chapter.5}% 103
\BOOKMARK [1][-]{section.5.39}{Zigzag Iterator \(M\)}{chapter.5}% 104
\BOOKMARK [1][-]{section.5.40}{Sparse Matrix Multiplication \(M\)}{chapter.5}% 105
\BOOKMARK [1][-]{section.5.41}{Set Matrix Zeroes \(M\)}{chapter.5}% 106
\BOOKMARK [1][-]{section.5.42}{Spiral Matrix \(M\)}{chapter.5}% 107
\BOOKMARK [1][-]{section.5.43}{Spiral Matrix II \(M\)}{chapter.5}% 108
\BOOKMARK [1][-]{section.5.44}{Rotate Image \(M\)}{chapter.5}% 109
\BOOKMARK [0][-]{chapter.6}{String}{}% 110
\BOOKMARK [1][-]{section.6.1}{Add Binary \(E\)}{chapter.6}% 111
\BOOKMARK [1][-]{section.6.2}{Count and Say \(E\)}{chapter.6}% 112
\BOOKMARK [1][-]{section.6.3}{Length of Last Word \(E\)}{chapter.6}% 113
\BOOKMARK [1][-]{section.6.4}{Longest Common Prefix \(E\)}{chapter.6}% 114
\BOOKMARK [1][-]{section.6.5}{Implement strStr\(\) \(E\)}{chapter.6}% 115
\BOOKMARK [1][-]{section.6.6}{Ransom Note \(E\)}{chapter.6}% 116
\BOOKMARK [1][-]{section.6.7}{First Unique Character in a String \(E\)}{chapter.6}% 117
\BOOKMARK [1][-]{section.6.8}{ZigZag Conversion \(E\)}{chapter.6}% 118
\BOOKMARK [1][-]{section.6.9}{Group Shifted Strings \(E\)}{chapter.6}% 119
\BOOKMARK [1][-]{section.6.10}{Compare Version Numbers \(E\)}{chapter.6}% 120
\BOOKMARK [1][-]{section.6.11}{Excel Sheet Column Number \(E\)}{chapter.6}% 121
\BOOKMARK [1][-]{section.6.12}{Excel Sheet Column Title \(E\)}{chapter.6}% 122
\BOOKMARK [1][-]{section.6.13}{Roman to Integer \(E\)}{chapter.6}% 123
\BOOKMARK [1][-]{section.6.14}{Integer to Roman \(M\)}{chapter.6}% 124
\BOOKMARK [1][-]{section.6.15}{String to Integer \(atoi\) \(E\)}{chapter.6}% 125
\BOOKMARK [1][-]{section.6.16}{Reverse String \(E\)}{chapter.6}% 126
\BOOKMARK [1][-]{section.6.17}{Reverse Vowels of a String \(E\)}{chapter.6}% 127
\BOOKMARK [1][-]{section.6.18}{Valid Palindrome \(E\)}{chapter.6}% 128
\BOOKMARK [1][-]{section.6.19}{Valid Anagram \(E\)}{chapter.6}% 129
\BOOKMARK [1][-]{section.6.20}{Group Anagrams \(M\)}{chapter.6}% 130
\BOOKMARK [1][-]{section.6.21}{Palindrome Permutation \(E\)}{chapter.6}% 131
\BOOKMARK [1][-]{section.6.22}{Palindrome Permutation II \(M\)}{chapter.6}% 132
\BOOKMARK [1][-]{section.6.23}{Isomorphic Strings \(E\)}{chapter.6}% 133
\BOOKMARK [1][-]{section.6.24}{Word Pattern \(E\)}{chapter.6}% 134
\BOOKMARK [1][-]{section.6.25}{Word Pattern II \(H\)}{chapter.6}% 135
\BOOKMARK [1][-]{section.6.26}{Valid Parentheses \(E\)}{chapter.6}% 136
\BOOKMARK [1][-]{section.6.27}{Generate Parentheses \(M\)}{chapter.6}% 137
\BOOKMARK [1][-]{section.6.28}{Different Ways to Add Parentheses \(M\)}{chapter.6}% 138
\BOOKMARK [1][-]{section.6.29}{Longest Valid Parentheses \(H\)}{chapter.6}% 139
\BOOKMARK [1][-]{section.6.30}{Remove Invalid Parentheses \(H\)}{chapter.6}% 140
\BOOKMARK [1][-]{section.6.31}{Flip Game \(E\)}{chapter.6}% 141
\BOOKMARK [1][-]{section.6.32}{Flip Game II \(M\)}{chapter.6}% 142
\BOOKMARK [1][-]{section.6.33}{Shortest Word Distance \(E\)}{chapter.6}% 143
\BOOKMARK [1][-]{section.6.34}{Shortest Word Distance II \(M\)}{chapter.6}% 144
\BOOKMARK [1][-]{section.6.35}{Shortest Word Distance III \(M\)}{chapter.6}% 145
\BOOKMARK [1][-]{section.6.36}{Strobogrammatic Number \(E\)}{chapter.6}% 146
\BOOKMARK [1][-]{section.6.37}{Strobogrammatic Number II \(M\)}{chapter.6}% 147
\BOOKMARK [1][-]{section.6.38}{Strobogrammatic Number III \(M\)}{chapter.6}% 148
\BOOKMARK [1][-]{section.6.39}{Read N Characters Given Read4 \(E\)}{chapter.6}% 149
\BOOKMARK [1][-]{section.6.40}{Read N Characters Given Read4 II \(H\)}{chapter.6}% 150
\BOOKMARK [1][-]{section.6.41}{Unique Word Abbreviation \(E\)}{chapter.6}% 151
\BOOKMARK [1][-]{section.6.42}{Generalized Abbreviation \(M\)}{chapter.6}% 152
\BOOKMARK [0][-]{chapter.7}{Tree}{}% 153
\BOOKMARK [1][-]{section.7.1}{Binary Tree Traversal}{chapter.7}% 154
\BOOKMARK [2][-]{subsection.7.1.1}{Binary Tree Preorder Traversal \(M\)}{section.7.1}% 155
\BOOKMARK [2][-]{subsection.7.1.2}{Binary Tree Inorder Traversal \(M\)}{section.7.1}% 156
\BOOKMARK [2][-]{subsection.7.1.3}{Binary Tree Postorder Traversal \(H\)}{section.7.1}% 157
\BOOKMARK [2][-]{subsection.7.1.4}{Binary Tree Level Order Traversal \(E\)}{section.7.1}% 158
\BOOKMARK [2][-]{subsection.7.1.5}{Binary Tree Level Order Traversal II \(E\)}{section.7.1}% 159
\BOOKMARK [2][-]{subsection.7.1.6}{Binary Tree Zigzag Level Order Traversal \(M\)}{section.7.1}% 160
\BOOKMARK [2][-]{subsection.7.1.7}{Binary Tree Right Side View \(M\)}{section.7.1}% 161
\BOOKMARK [2][-]{subsection.7.1.8}{Populating Next Right Pointers in Each Node \(M\)}{section.7.1}% 162
\BOOKMARK [2][-]{subsection.7.1.9}{Populating Next Right Pointers in Each Node II \(H\)}{section.7.1}% 163
\BOOKMARK [1][-]{section.7.2}{Binary Tree Recursion}{chapter.7}% 164
\BOOKMARK [2][-]{subsection.7.2.1}{Same Tree \(E\)}{section.7.2}% 165
\BOOKMARK [2][-]{subsection.7.2.2}{Symmetric Tree \(E\)}{section.7.2}% 166
\BOOKMARK [2][-]{subsection.7.2.3}{Invert Binary Tree \(E\)}{section.7.2}% 167
\BOOKMARK [2][-]{subsection.7.2.4}{Binary Tree Upside Down \(M\)}{section.7.2}% 168
\BOOKMARK [2][-]{subsection.7.2.5}{Lowest Common Ancestor of a Binary Tree \(M\)}{section.7.2}% 169
\BOOKMARK [2][-]{subsection.7.2.6}{Binary Tree Longest Consecutive Sequence \(M\)}{section.7.2}% 170
\BOOKMARK [2][-]{subsection.7.2.7}{Count Univalue Subtrees \(M\)}{section.7.2}% 171
\BOOKMARK [2][-]{subsection.7.2.8}{Balanced Binary Tree \(E\)}{section.7.2}% 172
\BOOKMARK [2][-]{subsection.7.2.9}{Maximum Depth of Binary Tree \(E\)}{section.7.2}% 173
\BOOKMARK [2][-]{subsection.7.2.10}{Minimum Depth of Binary Tree \(E\)}{section.7.2}% 174
\BOOKMARK [2][-]{subsection.7.2.11}{Find Leaves of Binary Tree \(M\)}{section.7.2}% 175
\BOOKMARK [2][-]{subsection.7.2.12}{Binary Tree Paths \(E\)}{section.7.2}% 176
\BOOKMARK [2][-]{subsection.7.2.13}{Path Sum \(E\)}{section.7.2}% 177
\BOOKMARK [2][-]{subsection.7.2.14}{Path Sum II \(M\)}{section.7.2}% 178
\BOOKMARK [2][-]{subsection.7.2.15}{Sum Root to Leaf Numbers \(M\)}{section.7.2}% 179
\BOOKMARK [2][-]{subsection.7.2.16}{Binary Tree Maximum Path Sum \(H\)}{section.7.2}% 180
\BOOKMARK [1][-]{section.7.3}{Binary Tree Construction}{chapter.7}% 181
\BOOKMARK [2][-]{subsection.7.3.1}{Serialize and Deserialize Binary Tree \(H\)}{section.7.3}% 182
\BOOKMARK [2][-]{subsection.7.3.2}{Verify Preorder Serialization of a Binary Tree \(M\)}{section.7.3}% 183
\BOOKMARK [1][-]{section.7.4}{Binary Search Tree}{chapter.7}% 184
\BOOKMARK [2][-]{subsection.7.4.1}{Lowest Common Ancestor of a Binary Search Tree \(E\)}{section.7.4}% 185
\BOOKMARK [2][-]{subsection.7.4.2}{Validate Binary Search Tree \(M\)}{section.7.4}% 186
\BOOKMARK [2][-]{subsection.7.4.3}{Binary Search Tree Iterator \(M\)}{section.7.4}% 187
\BOOKMARK [2][-]{subsection.7.4.4}{Recover Binary Search Tree \(H\)}{section.7.4}% 188
\BOOKMARK [2][-]{subsection.7.4.5}{Kth Smallest Element in a BST \(M\)}{section.7.4}% 189
\BOOKMARK [2][-]{subsection.7.4.6}{Verify Preorder Sequence in Binary Search Tree \(M\)}{section.7.4}% 190
\BOOKMARK [2][-]{subsection.7.4.7}{Inorder Successor in BST \(M\)}{section.7.4}% 191
\BOOKMARK [2][-]{subsection.7.4.8}{Largest BST Subtree \(M\)}{section.7.4}% 192
\BOOKMARK [2][-]{subsection.7.4.9}{Unique Binary Search Trees \(M\)}{section.7.4}% 193
\BOOKMARK [2][-]{subsection.7.4.10}{Unique Binary Search Trees II \(M\)}{section.7.4}% 194
\BOOKMARK [2][-]{subsection.7.4.11}{Convert Sorted Array to Binary Search Tree \(M\)}{section.7.4}% 195
\BOOKMARK [2][-]{subsection.7.4.12}{Convert Sorted List to Binary Search Tree \(M\)}{section.7.4}% 196
\BOOKMARK [2][-]{subsection.7.4.13}{Closest Binary Search Tree Value \(E\)}{section.7.4}% 197
\BOOKMARK [2][-]{subsection.7.4.14}{Closest Binary Search Tree Value II \(H\)}{section.7.4}% 198
\BOOKMARK [0][-]{chapter.8}{Sorting}{}% 199
\BOOKMARK [1][-]{section.8.1}{Sort Colors \(M\)}{chapter.8}% 200
\BOOKMARK [1][-]{section.8.2}{Wiggle Sort \(M\)}{chapter.8}% 201
\BOOKMARK [1][-]{section.8.3}{Wiggle Sort II \(M\)}{chapter.8}% 202
\BOOKMARK [1][-]{section.8.4}{Wiggle Subsequence \(M\)}{chapter.8}% 203
\BOOKMARK [1][-]{section.8.5}{Sort List \(M\)}{chapter.8}% 204
\BOOKMARK [1][-]{section.8.6}{Insertion Sort List \(M\)}{chapter.8}% 205
\BOOKMARK [0][-]{chapter.9}{Search}{}% 206
\BOOKMARK [1][-]{section.9.1}{Binary Search}{chapter.9}% 207
\BOOKMARK [2][-]{subsection.9.1.1}{First Bad Version \(E\)}{section.9.1}% 208
\BOOKMARK [2][-]{subsection.9.1.2}{Search Insert Position \(M\)}{section.9.1}% 209
\BOOKMARK [2][-]{subsection.9.1.3}{Find Peak Element \(M\)}{section.9.1}% 210
\BOOKMARK [2][-]{subsection.9.1.4}{Search a 2D Matrix \(M\)}{section.9.1}% 211
\BOOKMARK [2][-]{subsection.9.1.5}{Search a 2D Matrix II \(M\)}{section.9.1}% 212
\BOOKMARK [2][-]{subsection.9.1.6}{Kth Smallest Element in a Sorted Matrix \(M\)}{section.9.1}% 213
\BOOKMARK [2][-]{subsection.9.1.7}{Guess Number Higher or Lower \(E\)}{section.9.1}% 214
\BOOKMARK [2][-]{subsection.9.1.8}{Guess Number Higher or Lower II \(M\)}{section.9.1}% 215
\BOOKMARK [2][-]{subsection.9.1.9}{Find Minimum in Rotated Sorted Array \(M\)}{section.9.1}% 216
\BOOKMARK [2][-]{subsection.9.1.10}{Find Minimum in Rotated Sorted Array II \(H\)}{section.9.1}% 217
\BOOKMARK [2][-]{subsection.9.1.11}{Search in Rotated Sorted Array \(H\)}{section.9.1}% 218
\BOOKMARK [2][-]{subsection.9.1.12}{Search in Rotated Sorted Array II \(M\)}{section.9.1}% 219
\BOOKMARK [1][-]{section.9.2}{Deep-first Search}{chapter.9}% 220
\BOOKMARK [2][-]{subsection.9.2.1}{Walls and Gates \(M\)}{section.9.2}% 221
\BOOKMARK [2][-]{subsection.9.2.2}{Subset \(M\)}{section.9.2}% 222
\BOOKMARK [2][-]{subsection.9.2.3}{Subset II \(M\)}{section.9.2}% 223
\BOOKMARK [2][-]{subsection.9.2.4}{Permutations \(M\)}{section.9.2}% 224
\BOOKMARK [2][-]{subsection.9.2.5}{Permutations II \(M\)}{section.9.2}% 225
\BOOKMARK [2][-]{subsection.9.2.6}{Next Permutation \(M\)}{section.9.2}% 226
\BOOKMARK [2][-]{subsection.9.2.7}{Permutation Sequence \(M\)}{section.9.2}% 227
\BOOKMARK [2][-]{subsection.9.2.8}{Combinations \(M\)}{section.9.2}% 228
\BOOKMARK [2][-]{subsection.9.2.9}{Combination Sum \(M\)}{section.9.2}% 229
\BOOKMARK [2][-]{subsection.9.2.10}{Combination Sum II \(M\)}{section.9.2}% 230
\BOOKMARK [2][-]{subsection.9.2.11}{Combination Sum III \(M\)}{section.9.2}% 231
\BOOKMARK [2][-]{subsection.9.2.12}{Factor Combinations \(M\)}{section.9.2}% 232
\BOOKMARK [1][-]{section.9.3}{Breadth-first Search}{chapter.9}% 233
\BOOKMARK [0][-]{chapter.10}{Dynamic Programming}{}% 234
\BOOKMARK [1][-]{section.10.1}{Climbing Stairs \(E\)}{chapter.10}% 235
\BOOKMARK [1][-]{section.10.2}{Combination Sum IV \(M\)}{chapter.10}% 236
\BOOKMARK [1][-]{section.10.3}{Perfect Squares \(M\)}{chapter.10}% 237
\BOOKMARK [1][-]{section.10.4}{Best Time to Buy and Sell Stock \(E\)}{chapter.10}% 238
\BOOKMARK [1][-]{section.10.5}{Best Time to Buy and Sell Stock II \(M\)}{chapter.10}% 239
\BOOKMARK [1][-]{section.10.6}{Best Time to Buy and Sell Stock with Cooldown \(M\)}{chapter.10}% 240
\BOOKMARK [1][-]{section.10.7}{Best Time to Buy and Sell Stock III \(H\)}{chapter.10}% 241
\BOOKMARK [1][-]{section.10.8}{Best Time to Buy and Sell Stock IV \(H\)}{chapter.10}% 242
\BOOKMARK [1][-]{section.10.9}{House Robber \(E\)}{chapter.10}% 243
\BOOKMARK [1][-]{section.10.10}{House Robber II \(M\)}{chapter.10}% 244
\BOOKMARK [1][-]{section.10.11}{House Robber III \(M\)}{chapter.10}% 245
\BOOKMARK [1][-]{section.10.12}{Paint Fence \(E\)}{chapter.10}% 246
\BOOKMARK [1][-]{section.10.13}{Paint House \(M\)}{chapter.10}% 247
\BOOKMARK [1][-]{section.10.14}{Paint House II \(H\)}{chapter.10}% 248
\BOOKMARK [1][-]{section.10.15}{Pascal's Triangle \(E\)}{chapter.10}% 249
\BOOKMARK [1][-]{section.10.16}{Pascal's Triangle II \(E\)}{chapter.10}% 250
\BOOKMARK [1][-]{section.10.17}{Range Sum Query - Immutable \(E\)}{chapter.10}% 251
\BOOKMARK [1][-]{section.10.18}{Range Sum Query - Mutable \(M\)}{chapter.10}% 252
\BOOKMARK [1][-]{section.10.19}{Range Sum Query 2D - Immutable \(M\)}{chapter.10}% 253
\BOOKMARK [1][-]{section.10.20}{Unique Paths \(M\)}{chapter.10}% 254
\BOOKMARK [1][-]{section.10.21}{Unique Paths II \(M\)}{chapter.10}% 255
\BOOKMARK [1][-]{section.10.22}{Minimum Path Sum \(M\)}{chapter.10}% 256
\BOOKMARK [1][-]{section.10.23}{Dungeon Game \(M\)}{chapter.10}% 257
\BOOKMARK [1][-]{section.10.24}{Increasing Triplet Subsequence \(M\)}{chapter.10}% 258
\BOOKMARK [1][-]{section.10.25}{Longest Increasing Subsequence \(M\)}{chapter.10}% 259
\BOOKMARK [1][-]{section.10.26}{Longest Increasing Path in a Matrix \(M\)}{chapter.10}% 260
\BOOKMARK [1][-]{section.10.27}{Maximal Square \(M\)}{chapter.10}% 261
\BOOKMARK [1][-]{section.10.28}{Maximal Rectangle \(H\)}{chapter.10}% 262
\BOOKMARK [0][-]{chapter.11}{Greedy Algorithm}{}% 263
\BOOKMARK [1][-]{section.11.1}{Gas Station \(M\)}{chapter.11}% 264
\BOOKMARK [0][-]{chapter.12}{Graph}{}% 265
\BOOKMARK [1][-]{section.12.1}{Number of Connected Components in an Undirected Graph \(M\)}{chapter.12}% 266
\BOOKMARK [1][-]{section.12.2}{Graph Valid Tree \(M\)}{chapter.12}% 267
\BOOKMARK [1][-]{section.12.3}{Clone Graph \(M\)}{chapter.12}% 268
\BOOKMARK [1][-]{section.12.4}{Number of Islands \(M\)}{chapter.12}% 269
\BOOKMARK [1][-]{section.12.5}{Number of Islands II \(H\)}{chapter.12}% 270
\BOOKMARK [0][-]{chapter.13}{Design and Implementation}{}% 271
\BOOKMARK [1][-]{section.13.1}{Valid Sudoku \(E\)}{chapter.13}% 272
\BOOKMARK [1][-]{section.13.2}{Sudoku Solver \(H\)}{chapter.13}% 273
\BOOKMARK [1][-]{section.13.3}{Design Tic-Tac-Toe \(M\)}{chapter.13}% 274
\BOOKMARK [1][-]{section.13.4}{Boom Enemy \(M\)}{chapter.13}% 275
\BOOKMARK [1][-]{section.13.5}{Android Unlock Patterns \(M\)}{chapter.13}% 276
\BOOKMARK [1][-]{section.13.6}{Game of Life \(M\)}{chapter.13}% 277
\BOOKMARK [1][-]{section.13.7}{Peeking Iterator \(M\)}{chapter.13}% 278
\BOOKMARK [1][-]{section.13.8}{Design Phone Directory \(M\)}{chapter.13}% 279
\BOOKMARK [1][-]{section.13.9}{Insert Delete GetRandom O\(1\) \(H\)}{chapter.13}% 280
\BOOKMARK [1][-]{section.13.10}{Insert Delete GetRandom O\(1\) - Duplicates allowed ? \(H\)}{chapter.13}% 281
\BOOKMARK [0][-]{chapter.14}{Brute-force Enumeration}{}% 282
\BOOKMARK [0][-]{chapter.15}{Divide and Conquer}{}% 283
